generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  student
  instructor
}

model User {
  id           Int      @id @default(autoincrement())
  email        String?  @unique
  password     String?
  address      String?
  phone_number String?
  image        Json?   
  role         UserRole?
  name         String?
  rate         Float?
  experience   Int?
  classInstructor Class[] @relation("InstructorToClass")  // multiple classes
   enroll enrollClass[]
}

model Otp{
    id           Int      @id @default(autoincrement())
    action       String
    email        String
    otp          String?
    isVerify     Boolean?
}



model Class {
  id          Int      @id @default(autoincrement())
  name        String?
  price       Float?
  rate        Float?
  description String?   @db.VarChar(10000)
  duration    String?
  time        String?
  days        Json?     // JSON type
  place       String?
  createdAt   DateTime  @default(now())
  category    String?  
  sit         Int?
  enrollment  Int?
  status      Boolean   @default(true) 
  image        Json?   
 
  instructor User? @relation("InstructorToClass", fields: [instructorId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  instructorId Int?

  enroll enrollClass[]
}

enum paymentStatus {
  paid
  failed
  pending
  cancel
}

model enrollClass {
  id            Int           @id @default(autoincrement())
  name          String?
  classId       Int 
  class         Class         @relation(fields: [classId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  userId        Int 
  user          User          @relation(fields: [userId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  status        paymentStatus @default(pending)
  transactionId String? @unique
  createdAt   DateTime  @default(now())
}
